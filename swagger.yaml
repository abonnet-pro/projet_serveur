swagger: "2.0"

info:
  title: API Abonnements
  description: L'API permettant de gerer les abonnements clients.
  version: 1.0.0
host: 164.132.55.64:3332
basePath: /api/

paths:
  /employe:
    post:
      summary: Créer un nouvel employé.
      tags:
        - Employe
      parameters:
        - in: body
          name: employeInformations
          required: true
          schema:
            $ref: '#/definitions/employeCreation'

      responses:
        200:
          description: Employé créé
        400:
          description: Erreur, voir descriptif de l'erreur

  /employe/authenticate:
    post:
      summary: Authentifie un employé.
      tags:
        - Employe
      parameters:
        - in: body
          name: employeAuthentifications
          required: true
          schema:
            $ref: '#/definitions/employeAuthentification'

      responses:
        200:
          description: Employé authentifié
          schema:
            $ref: '#/definitions/employe'
        400:
          description: Erreur, voir descriptif de l'erreur

  /client:
    post:
      summary: Créer un nouveau client.
      tags:
        - Client
      parameters:
        - in: body
          name: clientInformations
          required: true
          schema:
            $ref: '#/definitions/clientCreation'

      responses:
        200:
          description: Client créé
        400:
          description: Erreur, voir descriptif de l'erreur

  /client/{id}:
    patch:
      summary: Modifie un client.
      tags:
        - Client
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Id du client
        - in: body
          name: publicationInformations
          schema:
            $ref: '#/definitions/clientInformation'

      responses:
        200:
          description: Client Modifié
          schema:
            $ref: '#/definitions/client'
        400:
          description: Erreur, voir descriptif de l'erreur
        401:
          description: Accès non autorisé

  /client/authenticate:
    post:
      summary: Authentifie un client.
      tags:
        - Client
      parameters:
        - in: body
          name: clientAuthentification
          required: true
          schema:
            $ref: '#/definitions/client'

      responses:
        200:
          description: Employé authentifié
          schema:
            $ref: '#/definitions/employe'
        400:
          description: Erreur, voir descriptif de l'erreur

  /upload:
    post:
      summary: Upload une image au format png sur le serveur.
      tags:
        - Upload
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: image
          type: file
          description: Le fichier à upload.

      responses:
        200:
          description: Image uploadé
          schema:
            type: object
            properties:
              imgUpload:
                type: string
        400:
          description: Erreur, voir descriptif de l'erreur
        401:
          description: Accès non autorisé

  /publication:
    get:
      summary: Récupère la liste des publications.
      tags:
        - Publication
      responses:
        200:
          description: La liste des publications
          schema:
            type: array
            items:
              $ref: '#/definitions/publication'
        400:
          description: Erreur, voir descriptif de l'erreur

    post:
      summary: Créer une nouvelle publication.
      tags:
        - Publication
      parameters:
        - in: body
          name: publicationInformations
          required: true
          schema:
            $ref: '#/definitions/publicationInformations'

      responses:
        200:
          description: Puublication créé
          schema:
            $ref: '#/definitions/publication'
        400:
          description: Erreur, voir descriptif de l'erreur
        401:
          description: Accès non autorisé

  /publication/{id}:
    get:
      summary: Récupère une publication.
      tags:
        - Publication
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Id de la publication
      responses:
        200:
          description: Puublication renvoyé
          schema:
            $ref: '#/definitions/publication'
        400:
          description: Erreur, voir descriptif de l'erreur

    patch:
      summary: Modifie une publication.
      tags:
        - Publication
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Id de la publication
        - in: body
          name: publicationInformations
          schema:
            $ref: '#/definitions/publicationInformations'

      responses:
        200:
          description: Puublication Modifié
          schema:
            $ref: '#/definitions/publication'
        400:
          description: Erreur, voir descriptif de l'erreur
        401:
          description: Accès non autorisé

    delete:
      summary: Supprime une publication.
      tags:
        - Publication
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Id de la publication
      responses:
        200:
          description: Publication supprimé
        400:
          description: Erreur, voir descriptif de l'erreur

  /publication/{id}/abonnement:
    post:
      summary: S'abonner à une publication.
      tags:
        - Publication
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Id de la publication
      responses:
        200:
          description: Abonnement renvoyé
          schema:
            $ref: '#/definitions/abonnement'
        400:
          description: Erreur, voir descriptif de l'erreur
        401:
          description: Accès non autorisé

  /abonnement:
    get:
      summary: Récupère la liste des abonnements du client si role client ou total si role employé.
      tags:
        - Abonnement
      parameters:
        - in: query
          name: actif
          type: boolean
          required: false
          description: Récupère la liste des abonnements en fonction de la donnée actif et du role
        - in: query
          name: paye
          type: boolean
          required: false
          description: Récupère la liste des abonnements en fonction de la donnée paye et du role
      responses:
        200:
          description: Liste d'abonnement renvoyé
          schema:
            type: array
            items:
              $ref: '#/definitions/abonnement'
        400:
          description: Erreur, voir descriptif de l'erreur

  /abonnement/{id}:
    get:
      summary: Récupère un abonnement.
      tags:
        - Abonnement
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Id de l'abonnement
      responses:
        200:
          description: Abonnement renvoyé
          schema:
            $ref: '#/definitions/abonnement'
        400:
          description: Erreur, voir descriptif de l'erreur
        401:
          description: Accès non autorisé

  /abonnement/{id}/arreter:
    post:
      summary: Arrête un abonnement.
      tags:
        - Abonnement
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Id de l'abonnement
      responses:
        200:
          description: Abonnement renvoyé
          schema:
            $ref: '#/definitions/abonnement'
        400:
          description: Erreur, voir descriptif de l'erreur
        401:
          description: Accès non autorisé

definitions:
  employeCreation:
    type: object
    properties:
      nom:
        type: string
      prenom:
        type: string
      login:
        type: string
      password:
        type: string

  employeAuthentification:
    type: object
    properties:
      login:
        type: string
      password:
        type: string

  employe:
    type: object
    properties:
      nom:
        type: string
      prenom:
        type: string
      login:
        type: string
      role:
        type: string
      token:
        type: string

  clientCreation:
    type: object
    properties:
      nom:
        type: string
      prenom:
        type: string
      displayName:
        type: string
      login:
        type: string
        format: email
      dateNaissance:
        type: string
        pattern: /([0-9]{2})-(?:[0-9]{2})-([0-9]{4})/
        example: "14-01-1993"
      lieuNaissance:
        type: string
      rue:
        type: string
      cp:
        type: string
      ville:
        type: string
      password:
        type: string

  clientInformation:
    type: object
    properties:
      nom:
        type: string
      prenom:
        type: string
      displayName:
        type: string
      login:
        type: string
        format: email
      dateNaissance:
        type: string
        pattern: /([0-9]{2})-(?:[0-9]{2})-([0-9]{4})/
        example: "14-01-1993"
      lieuNaissance:
        type: string
      rue:
        type: string
      cp:
        type: string
      ville:
        type: string

  client:
    type: object
    properties:
      id:
        type: integer
      nom:
        type: string
      prenom:
        type: string
      displayName:
        type: string
      login:
        type: string
        format: email
      dateNaissance:
        type: string
        pattern: /([0-9]{2})-(?:[0-9]{2})-([0-9]{4})/
        example: "14-01-1993"
      lieuNaissance:
        type: string
      rue:
        type: string
      cp:
        type: string
      ville:
        type: string
      password:
        type: string
      role:
        type: string

  clientAuthentification:
    type: object
    properties:
      login:
        type: string
      password:
        type: string

  publicationInformations:
    type: object
    properties:
      titre:
        type: string
      description:
        type: string
      nbrNumeroAnnee:
        type: number
      photoCouverture:
        type: string
      prixAnnuel:
        type: number
      promotion:
        type: boolean
      pourcentagePromo:
        type: number

  publication:
    type: object
    properties:
      id:
        type: number
      titre:
        type: string
      description:
        type: string
      nbrNumeroAnnee:
        type: number
      photoCouverture:
        type: string
      prixAnnuel:
        type: number
      active:
        type: boolean
      promotion:
        type: boolean
      pourcentagePromo:
        type: number

  abonnement:
    type: object
    properties:
      publication:
        $ref: '#/definitions/publication'
      client:
        $ref: '#/definitions/client'
      id:
        type: number
      dateDebut:
        type: string
        pattern: /([0-9]{2})-(?:[0-9]{2})-([0-9]{4})/
        example: "14-01-1993"
      dateFin:
        type: string
        pattern: /([0-9]{2})-(?:[0-9]{2})-([0-9]{4})/
        example: "14-01-1993"
      actif:
        type: boolean
      paye:
        type: boolean
      dateResiliation:
        type: string
        pattern: /([0-9]{2})-(?:[0-9]{2})-([0-9]{4})/
        example: "14-01-1993"
      rembourse:
        type: boolean